@model AdvertisementVM

<form method="post">
    <input asp-for="Advertisement.AdvertisementId" hidden />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">@((Model.Advertisement.AdvertisementId != 0) ? "Обновить объявление" : "Добавить объявление")</h2>
            <hr />
        </div>

        <div class="mb-3 row p-1">
            <label asp-for="Advertisement.Type" class="p-0">Тип</label>
            <input asp-for="Advertisement.Type" class="form-control" />
            <span asp-validation-for="Advertisement.Type" class="text-danger"></span>
        </div>

        <div class="mb-3 row p-1">
            <label asp-for="Advertisement.Text" class="p-0">Текст объявления</label>
            <textarea asp-for="Advertisement.Text" class="form-control" rows="5"></textarea>
        </div>

        <div class="mb-3 row p-1">
            <label asp-for="Advertisement.Cost" class="p-0">Стоимость</label>
            <input asp-for="Advertisement.Cost" class="form-control" />
            <span asp-validation-for="Advertisement.Cost" class="text-danger"></span>
        </div>

        <div class="mb-3 row p-1">
            <label asp-for="Advertisement.IssueId" class="p-0">Выпуск</label>
            <select asp-for="Advertisement.IssueId" asp-items="Model.Issues" class="form-control">
                <option disabled selected>-- Выберите выпуск --</option>
            </select>
            <span asp-validation-for="Advertisement.IssueId" class="text-danger"></span>
        </div>

        <div class="row">
            <div class="col-3">
                <button type="submit" class="btn btn-primary form-control">
                    @((Model.Advertisement.AdvertisementId != 0) ? "Обновить" : "Добавить")
                </button>
            </div>
            <div class="col-3">
                <a asp-controller="Advertisement" asp-action="Index" class="btn btn-outline-secondary form-control">Вернуться назад</a>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        tinymce.init({
          selector: 'textarea',
          plugins: [
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons','lists','table', 'visualblocks', 'wordcount',
            'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
          ],
          toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent',
          tinycomments_mode: 'embedded',
          tinycomments_author: 'Author name',
          mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
          ],
          ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}

